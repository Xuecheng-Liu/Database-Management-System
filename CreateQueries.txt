CREATE TABLE USER 
(
  User_ID INTEGER UNIQUE NOT NULL PRIMARY KEY AUTOINCREMENT,
  Email VARCHAR(50) UNIQUE NOT NULL,
  AddrStreet VARCHAR(50),
  AddrStreet2 VARCHAR(16),
  AddrCity VARCHAR(25),
  AddrZip INT(5),
  AddrCountry VARCHAR(50),
  Fname VARCHAR(50) NOT NULL,
  Lname VARCHAR (50) NOT NULL,
  Bio VARCHAR(255),
  Profile_Picture VARCHAR(255),
  C_Karma INT DEFAULT 0,
  StoreOwnerFlag INT NOT NULL DEFAULT 0,
  O_Karma INT DEFAULT 0,
  Seller_Bio VARCHAR(255)
 );


CREATE TABLE STORE 
(
  Store_ID INTEGER UNIQUE NOT NULL PRIMARY KEY AUTOINCREMENT,
  User_ID INT UNIQUE NOT NULL,
  Name VARCHAR(255) UNIQUE NOT NULL,
  Description VARCHAR(255),
  Banner_Image VARCHAR(255),
  FOREIGN KEY(User_ID) REFERENCES USER
  );

CREATE TABLE PAYMENT_TYPE 
(
  Payment_ID INTEGER UNIQUE NOT NULL PRIMARY KEY AUTOINCREMENT,
  Type INT NOT NULL,
  User_ID INTEGER NOT NULL,
  FOREIGN KEY(User_ID) REFERENCES USER
  );

CREATE TABLE CREDIT_CARD 
(
  Payment_ID INTEGER UNIQUE NOT NULL,
  Card_No INTEGER UNIQUE NOT NULL,
  BillAddrStreet VARCHAR(50),
  BillAddrStreet2 VARCHAR(16),
  BillAddrCity VARCHAR(25),
  BillAddrZip INT(5),
  BillAddrCountry VARCHAR(50),
  FOREIGN KEY(Payment_ID) REFERENCES PAYMENT_TYPE
  );


CREATE TABLE KARMA_POINTS 
(
  Payment_ID INTEGER UNIQUE NOT NULL,
  FOREIGN KEY(Payment_ID) REFERENCES PAYMENT_TYPE
  );


CREATE TABLE CRYPTOCURRENCY 
(
  Payment_ID INTEGER UNIQUE NOT NULL,
  Wallet_ID INTEGER UNIQUE NOT NULL,
  Type VARCHAR(50) NOT NULL,
  FOREIGN KEY(Payment_ID) REFERENCES PAYMENT_TYPE
  );


CREATE TABLE BANK_ACCOUNT 
(
  Payment_ID INTEGER UNIQUE NOT NULL,
  Account_No VARCHAR(50) UNIQUE NOT NULL,
  Routing_No VARCHAR(50) UNIQUE NOT NULL,
  FOREIGN KEY(Payment_ID) REFERENCES PAYMENT_TYPE
  );


CREATE TABLE PROMO_CODE 
(
  Code VARCHAR(20) NOT NULL,
  Store_ID INT NOT NULL,
  Discount DECIMAL(3,1) NOT NULL,
  Start_Time DATE NOT NULL,
  End_Time DATE NOT NULL,
  PRIMARY KEY(Code, Store_ID)
  FOREIGN KEY(Store_ID) REFERENCES STORE
  );


CREATE TABLE ITEM 
(
  Item_ID INTEGER UNIQUE NOT NULL PRIMARY KEY AUTOINCREMENT,
  Title VARCHAR(255) NOT NULL,
  Description VARCHAR(255),
  File VARCHAR(255),
  Store_ID INT NOT NULL,
  FOREIGN KEY(Store_ID) REFERENCES STORE
  );


CREATE TABLE IMAGE_PORTFOLIO
(
  Item_ID INT NOT NULL,
  Picture_1 VARCHAR(255),
  Picture_2 VARCHAR(255),
  Picture_3 VARCHAR(255),
  Picture_4 VARCHAR(255),
  Picture_5 VARCHAR(255),
  FOREIGN KEY(Item_ID) REFERENCES ITEM
  );


CREATE TABLE KEYWORDS
(
  Item_ID INT NOT NULL,
  Keyword VARCHAR(50) NOT NULL,
  PRIMARY KEY(Item_ID, Keyword),
  FOREIGN KEY(Item_ID) REFERENCES ITEM
  );


CREATE TABLE PRICE
(
  Item_ID INT NOT NULL,
  Crypto_Price DECIMAL(5,2) NOT NULL,
  Karma_Price INT NOT NULL,
  USD_Price DECIMAL(5,2) NOT NULL,
  PRIMARY KEY(Item_ID),
  FOREIGN KEY(Item_ID) REFERENCES ITEM
  );


CREATE TABLE ITEM_REVIEW
(
  User_ID INT NOT NULL,
  Item_ID INT NOT NULL,
  Content VARCHAR(500),
  PRIMARY KEY(User_ID, Item_ID),
  FOREIGN KEY(User_ID) REFERENCES USER,
  FOREIGN KEY(Item_ID) REFERENCES ITEM
  );


CREATE TABLE STORE_REVIEW
(
  User_ID INT NOT NULL,
  Store_ID INT NOT NULL,
  Stars INT NOT NULL CHECK (Stars >= 0 AND Stars <= 10),
  Content VARCHAR(500) NOT NULL,
  O_Karma_Earned INT NOT NULL,
  PRIMARY KEY(User_ID, Store_ID),
  FOREIGN KEY(User_ID) REFERENCES USER,
  FOREIGN KEY(Store_ID) REFERENCES STORE
  );


CREATE TABLE SOCIAL_MEDIA
(
  Store_ID INT NOT NULL,
  Link VARCHAR(255) NOT NULL,
  FOREIGN KEY(Store_ID) REFERENCES STORE
  );


CREATE TABLE ACCEPTED_PAYMENT
(
  Store_ID INT NOT NULL,
  Payment_Type INT NOT NULL,
  FOREIGN KEY(Store_ID) REFERENCES STORE,
  FOREIGN KEY(Payment_Type) REFERENCES PAYMENT_TYPE
  );




CREATE TABLE ORDER_TABLE
(
        Order_ID INTEGER UNIQUE NOT NULL PRIMARY KEY AUTOINCREMENT,
        Cart_ID INT UNIQUE NOT NULL,
        Purchase_Date DATE NOT NULL,
        FOREIGN KEY (Cart_ID) REFERENCES SHOPPING_CART
);


CREATE TABLE ORDER_PAYMENT
(
        Payment_ID INT NOT NULL,
        Store_ID INT NOT NULL,
        Order_ID INT NOT NULL,
        Amount_Paid DECIMAL(4,2),
       PRIMARY KEY (Payment_ID, Store_ID, Order_ID),
        FOREIGN KEY (Payment_ID)
                REFERENCES PAYMENT_TYPE
        FOREIGN KEY (Store_ID)
                REFERENCES STORE
        FOREIGN KEY (Order_ID)
                REFERENCES ORDER_TABLE
);


CREATE TABLE SHOPPING_CART
(
        Cart_ID INTEGER UNIQUE PRIMARY KEY AUTOINCREMENT,
        User_ID INT NOT NULL,
        FOREIGN KEY (User_ID)
                REFERENCES USER
);


CREATE TABLE CONTAINS
(
        Cart_ID INT NOT NULL,
        Item_ID INT NOT NULL,
        Quantity INT NOT NULL,
        FOREIGN KEY (Cart_ID)
        REFERENCES SHOPPING_CART,
        FOREIGN KEY (Item_ID)
        REFERENCES ITEM
);


CREATE TABLE FAVORITES
(
        User_ID INT NOT NULL,
        Store_ID INT NOT NULL,
        PRIMARY KEY(User_ID, Store_ID),
        FOREIGN KEY (User_ID)
        REFERENCES USER,
        FOREIGN KEY (Store_ID)
        REFERENCES STORE
);

